{"version":3,"sources":["../lib/bit-chaos.js","logo-te-logo.png","../lib/bit-filament.js","App.js","serviceWorker.js","index.js"],"names":["Buffer","_classCallCheck","__webpack_require__","TextAPI","window","encode","text","TextEncoder","decode","data","TextDecoder","Uint8Array","from","toString","module","exports","BitChaos","secret","origin","chunk","length","result","logic","add","key","ring","len","sub","xor","done","this","ArrayBuffer","filter","byte","encrypt","message","mode","arguments","undefined","fns","slen","dlen","encrypted","sptr","dptr","seq","shift","state","step","slice","reduce","value","part","l","unshift","concat","decrypt","decrypted","steps","fn","_ref","p","_slicedToArray","_defineProperty","_createClass","GET_INFO","NUMBER","UINT_8","UINT_16","UINT_32","INT_8","INT_16","INT_32","FLOAT_32","FLOAT_64","FALSE","TRUE","STRING","REGEXP","OBJECT","ARRAY","BUFFER","BitFilament","customTypes","_this$types","_this","types","twist","n","constructor","name","s","NumberInfo","Float64Array","test","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","r","Array","buffer","untwist","info","offset","_UINT_8$UINT_16$UINT_","arrayBuffer","Float32Array","ret","RegExp","replace","o","Object","entries","filament","_ref2","obj","_this$untwist","_this$untwist2","offs","_this$untwist3","_this$untwist4","v","a","el","arr","_this$untwist5","_this$untwist6","push","b","arg","inspect","infoByte","type","isClient","PATH","location","pathname","LS","id","console","log","JSON","stringify","localStorage","setItem","err","error","parse","App","path","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","ecdh","createECDH","bc","peerMessage","setupKeys","privateKey","setPrivateKey","setState","getPublicKey","generateKeys","getPrivateKey","_ref2$value","computeSecret","B64","trim","e","warn","_ref3$value","_ref3","_ref4$value","_ref4","_ref5$value","_ref5","navigator","_this2","_this$state","publicKey","react_default","createElement","className","src","logo","alt","placeholder","onChange","_ref6","_ref6$target","target","onPeerPublicChange","title","onClick","_ref7","_ref7$target","copy","_ref8","_ref8$target","onPeerMessageChange","_ref9","_ref9$target","onMessageChange","_ref10","_ref10$target","_ref11","_ref11$target","href","Component","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f4880244.chunk.js","sourcesContent":["var _classCallCheck = require(\"/home/elser/node/projects/relative-chaos/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar isClient = typeof window !== 'undefined';\nvar TextAPI = isClient ? {\n  encode: function encode(text) {\n    return new TextEncoder().encode(text);\n  },\n  decode: function decode(data) {\n    return new TextDecoder().decode(Uint8Array.from(data));\n  }\n} : {\n  encode: function encode(text) {\n    return Buffer.from(text);\n  },\n  decode: function decode(data) {\n    return Buffer.from(data).toString('utf8');\n  }\n};\n\nmodule.exports = function BitChaos(secret) {\n  \"use strict\";\n\n  _classCallCheck(this, BitChaos);\n\n  if (typeof secret === 'string') secret = TextAPI.encode(secret);else if (secret instanceof ArrayBuffer) secret = new Uint8Array(secret);else if (!(secret instanceof Uint8Array)) secret = Uint8Array.from(secret);\n  secret = Uint8Array.from(secret).filter(function (byte) {\n    return !!byte;\n  });\n\n  function origin(chunk, length) {\n    var result = chunk;\n    length = length & 3;\n    var logic = {\n      add: function add(key) {\n        var ring = 255,\n            len = length;\n\n        while (--len) {\n          ring = ring << 8 | ring;\n        }\n\n        ;\n        result = result + key & ring;\n        return logic;\n      },\n      sub: function sub(key) {\n        var ring = 255,\n            len = length;\n\n        while (--len) {\n          ring = ring << 8 | ring;\n        }\n\n        ;\n        result = result >= key ? result - key : ring + 1 + result - key;\n        return logic;\n      },\n      xor: function xor(key) {\n        result = result ^ key;\n        return logic;\n      },\n      done: function done() {\n        return result;\n      }\n    };\n    return logic;\n  }\n\n  this.encrypt = function (message) {\n    var mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'array';\n    var fns = ['add', 'sub', 'xor'];\n    if (typeof message === 'string') message = TextAPI.encode(message);else if (message instanceof ArrayBuffer) message = new Uint8Array(message);else if (!(message instanceof Uint8Array)) message = Uint8Array.from(message);\n    var data = Uint8Array.from(message);\n    var slen = secret.length;\n    var dlen = data.length;\n    var encrypted = [];\n    var mask = 192;\n    var sptr = 0;\n    var dptr = 0;\n\n    while (dptr < dlen) {\n      var len = 0;\n      var seq = secret[sptr++];\n      sptr = sptr >= slen ? sptr - slen : sptr;\n      var shift = 0;\n      var state = void 0,\n          chunk = void 0;\n\n      while (mask >> shift) {\n        var step = (seq & mask >> shift) >> 6 - shift;\n\n        if (step) {\n          if (!len) {\n            len = dlen - dptr < step ? dlen - dptr : step;\n            chunk = data.slice(dptr, dptr + len).reduce(function (value, byte) {\n              return value ? value << 8 | byte : byte;\n            }, 0);\n            state = origin(chunk, len);\n          }\n\n          var key = secret.slice(sptr, sptr + len).reduce(function (key, byte) {\n            return key ? key << 8 | byte : byte;\n          }, 0);\n          state = state[fns[step - 1]](key);\n          sptr += len;\n          sptr = sptr >= slen ? sptr - slen : sptr;\n        }\n\n        shift += 2;\n      } // console.log({state, chunk,dptr, dlen, sptr, slen, encrypted, message, data, secret, len, shift, seq})\n\n\n      var result = state.done();\n      var part = [];\n      var l = len;\n\n      while (l--) {\n        part.unshift(result & 255);\n        result >>= 8;\n      }\n\n      encrypted = encrypted.concat(part);\n      dptr += len;\n    }\n\n    if (mode === 'array') return encrypted;\n    if (mode === 'bytearray') return Uint8Array.from(encrypted);\n    return TextAPI.decode(encrypted);\n  };\n\n  this.decrypt = function (message) {\n    var mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'text';\n    var fns = ['sub', 'add', 'xor'];\n    if (typeof message === 'string') message = TextAPI.encode(message);\n    if (message instanceof ArrayBuffer) message = new Uint8Array(message);else if (!(message instanceof Uint8Array)) message = Uint8Array.from(message);\n    var data = Uint8Array.from(message);\n    var slen = secret.length;\n    var dlen = data.length;\n    var decrypted = [];\n    var sptr = 0;\n    var dptr = 0;\n\n    while (dptr < dlen) {\n      var len = 0;\n      var seq = secret[sptr++];\n      sptr = sptr >= slen ? sptr - slen : sptr;\n      var state = void 0,\n          chunk = void 0;\n      var shift = 0;\n      var mask = 192;\n      var steps = [];\n\n      while (mask >> shift) {\n        var step = (seq & mask >> shift) >> 6 - shift;\n\n        if (step) {\n          if (!len) {\n            len = dlen - dptr < step ? dlen - dptr : step;\n            chunk = data.slice(dptr, dptr + len).reduce(function (value, byte) {\n              return value ? value << 8 | byte : byte;\n            }, 0);\n            state = origin(chunk, len);\n          }\n\n          var key = secret.slice(sptr, sptr + len).reduce(function (key, byte) {\n            return key ? key << 8 | byte : byte;\n          }, 0);\n          steps.unshift({\n            fn: fns[step - 1],\n            key: key\n          });\n          sptr += len;\n          sptr = sptr >= slen ? sptr - slen : sptr;\n        }\n\n        shift += 2;\n      }\n\n      var result = steps.reduce(function (state, _ref) {\n        var fn = _ref.fn,\n            key = _ref.key;\n        return state[fn](key);\n      }, state).done();\n      var part = [];\n      var l = len;\n\n      while (l--) {\n        part.unshift(result & 255);\n        result >>= 8;\n      }\n\n      decrypted = decrypted.concat(part);\n      dptr += len;\n    }\n\n    if (mode === 'array') return decrypted;\n    if (mode === 'bytearray') return Uint8Array.from(decrypted);\n    return TextAPI.decode(decrypted);\n  };\n};","module.exports = __webpack_public_path__ + \"static/media/logo-te-logo.aaa32282.png\";","var _slicedToArray = require(\"/home/elser/node/projects/relative-chaos/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _defineProperty = require(\"/home/elser/node/projects/relative-chaos/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _classCallCheck = require(\"/home/elser/node/projects/relative-chaos/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/elser/node/projects/relative-chaos/node_modules/@babel/runtime/helpers/createClass\");\n\nvar isClient = typeof window !== 'undefined';\nvar TextAPI = isClient ? {\n  encode: function encode(text) {\n    return new TextEncoder().encode(text);\n  },\n  decode: function decode(data) {\n    return new TextDecoder().decode(Uint8Array.from(data));\n  }\n} : {\n  encode: function encode(text) {\n    return Buffer.from(text);\n  },\n  decode: function decode(data) {\n    return Buffer.from(data).toString('utf8');\n  }\n};\nvar GET_INFO = 0x0F; // 0000 1111\n\nvar GET_TYPE = 0xF0; // 1111 0000\n\nvar NUMBER = 0x10; // 00 01 0000\n\nvar UINT_8 = 0x00; // 0000 0000\n\nvar UINT_16 = 0x01; // 0000 0001\n\nvar UINT_32 = 0x02; // 0000 0010\n\nvar INT_8 = 0x03; // 0000 0011\n\nvar INT_16 = 0x04; // 0000 0100\n\nvar INT_32 = 0x05; // 0000 0101\n\nvar FLOAT_32 = 0x06; // 0000 0110\n\nvar FLOAT_64 = 0x07; // 0000 0111\n\nvar FALSE = 0x0E; // 0000 1110\n\nvar TRUE = 0x0F; // 0000 1111\n\nvar STRING = 0x20; // 0010 0000\n\nvar REGEXP = 0x30; // 0011 0000\n\nvar OBJECT = 0x40; // 0100 0000\n\nvar ARRAY = 0x50; // 0101 0000\n\nvar BUFFER = 0x60; // 0110 0000\n\nvar BitFilament =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  function BitFilament(customTypes) {\n    var _this = this,\n        _this$types;\n\n    _classCallCheck(this, BitFilament);\n\n    this.types = (_this$types = {}, _defineProperty(_this$types, NUMBER, {\n      twist: function twist(n) {\n        if (n.constructor.name === 'Boolean') return [NUMBER | (n ? TRUE : FALSE)];\n        var s = n.toString(16);\n        var NumberInfo = [Float64Array, FLOAT_64];\n\n        if (!/\\./.test(s)) {\n          if (n < 0) {\n            /*    0111 0001 */\n            if (-0x81 < n) NumberInfo = [Int8Array, INT_8];else\n              /*    0111 0000 0000 0001 */\n              if (-0x8001 < n) NumberInfo = [Int16Array, INT_16];else\n                /*    0111 0000 0000 0001 */\n                if (-0x80000001 < n) NumberInfo = [Int32Array, INT_32];\n          } else {\n            if (n < 0x100) NumberInfo = [Uint8Array, UINT_8];else if (n < 0x10000) NumberInfo = [Uint16Array, UINT_16];else if (n < 0x100000000) NumberInfo = [Uint32Array, UINT_32];\n          }\n        }\n\n        var r = Array.from(new Uint8Array(NumberInfo[0].from([n]).buffer));\n        r.unshift(NUMBER | NumberInfo[1]);\n        return r;\n      },\n      untwist: function untwist(info, buffer, offset) {\n        var _UINT_8$UINT_16$UINT_;\n\n        return (_UINT_8$UINT_16$UINT_ = {}, _defineProperty(_UINT_8$UINT_16$UINT_, UINT_8, function (buffer, offset) {\n          return [buffer[offset], offset + 1];\n        }), _defineProperty(_UINT_8$UINT_16$UINT_, UINT_16, function (buffer, offset) {\n          var arrayBuffer = new Uint8Array(buffer.slice(offset, offset + 2)).buffer;\n          return [new Uint16Array(arrayBuffer)[0], offset + 2];\n        }), _defineProperty(_UINT_8$UINT_16$UINT_, UINT_32, function (buffer, offset) {\n          var arrayBuffer = new Uint8Array(buffer.slice(offset, offset + 4)).buffer;\n          return [new Uint32Array(arrayBuffer)[0], offset + 4];\n        }), _defineProperty(_UINT_8$UINT_16$UINT_, INT_8, function (buffer, offset) {\n          return [buffer[offset], offset + 1];\n        }), _defineProperty(_UINT_8$UINT_16$UINT_, INT_16, function (buffer, offset) {\n          var arrayBuffer = new Uint8Array(buffer.slice(offset, offset + 2)).buffer;\n          return [new Int16Array(arrayBuffer)[0], offset + 2];\n        }), _defineProperty(_UINT_8$UINT_16$UINT_, INT_32, function (buffer, offset) {\n          var arrayBuffer = new Uint8Array(buffer.slice(offset, offset + 4)).buffer;\n          return [new Int32Array(arrayBuffer)[0], offset + 4];\n        }), _defineProperty(_UINT_8$UINT_16$UINT_, FLOAT_32, function (buffer, offset) {\n          var arrayBuffer = new Uint8Array(buffer.slice(offset, offset + 4)).buffer;\n          return [new Float32Array(arrayBuffer)[0], offset + 4];\n        }), _defineProperty(_UINT_8$UINT_16$UINT_, FLOAT_64, function (buffer, offset) {\n          var arrayBuffer = new Uint8Array(buffer.slice(offset, offset + 8)).buffer;\n          return [new Float64Array(arrayBuffer)[0], offset + 8];\n        }), _defineProperty(_UINT_8$UINT_16$UINT_, FALSE, function () {\n          return [false, offset];\n        }), _defineProperty(_UINT_8$UINT_16$UINT_, TRUE, function () {\n          return [true, offset];\n        }), _UINT_8$UINT_16$UINT_)[info](buffer, offset);\n      }\n    }), _defineProperty(_this$types, STRING, {\n      twist: function twist(s) {\n        var arrayBuffer = Array.from(TextAPI.encode(s));\n        var l = [];\n        var mask = 0xff;\n        var len = arrayBuffer.length;\n\n        while (len) {\n          l.unshift(len & mask);\n          len >>= 8;\n        }\n\n        return [STRING | l.length].concat(l).concat(arrayBuffer);\n      },\n      untwist: function untwist(len, buffer, offset) {\n        var l = buffer.slice(offset, offset + len).reduce(function (l, byte) {\n          return l << 8 | byte;\n        }, 0);\n        var s = TextAPI.decode(new Uint8Array(buffer.slice(offset + len, offset + len + l)));\n        return [s, offset + len + l];\n      }\n    }), _defineProperty(_this$types, REGEXP, {\n      twist: function twist(r) {\n        var ret = _this.types[STRING].twist(r.toString());\n\n        ret[0] = REGEXP | ret[0] & GET_INFO;\n        return ret;\n      },\n      untwist: function untwist(len, buffer, offset) {\n        var ret = _this.types[STRING].untwist(len, buffer, offset);\n\n        ret[0] = new RegExp(ret[0].replace(/^\\/(.*)\\/g?i?m?u?y?$/, '$1'), ret[0].replace(/^\\/.*\\/(g?i?m?u?y?)$/, '$1'));\n        return ret;\n      }\n    }), _defineProperty(_this$types, OBJECT, {\n      twist: function twist(o) {\n        o = Object.entries(o);\n        var l = [];\n        var mask = 0xff;\n        var len = o.length;\n\n        while (len) {\n          l.unshift(len & mask);\n          len >>= 8;\n        }\n\n        return o.reduce(function (filament, _ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              key = _ref2[0],\n              value = _ref2[1];\n\n          key = _this.types[STRING].twist(key);\n          return filament.concat(key).concat(_this.twist(value));\n        }, [OBJECT | l.length].concat(l));\n      },\n      untwist: function untwist(len, buffer, offset) {\n        var l = buffer.slice(offset, offset + len).reduce(function (l, byte) {\n          return l << 8 | byte;\n        }, 0);\n        offset += len;\n        var obj = {};\n\n        while (l--) {\n          var _this$untwist = _this.untwist(buffer, offset),\n              _this$untwist2 = _slicedToArray(_this$untwist, 2),\n              key = _this$untwist2[0],\n              offs = _this$untwist2[1];\n\n          var _this$untwist3 = _this.untwist(buffer, offs),\n              _this$untwist4 = _slicedToArray(_this$untwist3, 2),\n              v = _this$untwist4[0],\n              o = _this$untwist4[1];\n\n          obj[key] = v;\n          offset = o;\n        }\n\n        return [obj, offset];\n      }\n    }), _defineProperty(_this$types, ARRAY, {\n      twist: function twist(a) {\n        a = Array.from(a);\n        var l = [];\n        var mask = 0xff;\n        var len = a.length;\n\n        while (len) {\n          l.unshift(len & mask);\n          len >>= 8;\n        }\n\n        return a.reduce(function (filament, el) {\n          return filament.concat(_this.twist(el));\n        }, [ARRAY | l.length].concat(l));\n      },\n      untwist: function untwist(len, buffer, offset) {\n        var l = buffer.slice(offset, offset + len).reduce(function (l, byte) {\n          return l << 8 | byte;\n        }, 0);\n        offset += len;\n        var arr = [];\n\n        while (l--) {\n          var _this$untwist5 = _this.untwist(buffer, offset),\n              _this$untwist6 = _slicedToArray(_this$untwist5, 2),\n              v = _this$untwist6[0],\n              o = _this$untwist6[1];\n\n          arr.push(v);\n          offset = o;\n        }\n\n        return [arr, offset];\n      }\n    }), _defineProperty(_this$types, BUFFER, {\n      twist: function twist(b) {\n        b = Array.from(b);\n        var l = [];\n        var mask = 0xff;\n        var len = b.length;\n\n        while (len) {\n          l.unshift(len & mask);\n          len >>= 8;\n        }\n\n        return [BUFFER | l.length].concat(l).concat(b);\n      },\n      untwist: function untwist(len, buffer, offset) {\n        var l = buffer.slice(offset, offset + len).reduce(function (l, byte) {\n          return l << 8 | byte;\n        }, 0);\n        var b = buffer.slice(offset + len, offset + len + l);\n        return [b, offset + len + l];\n      }\n    }), _this$types);\n  }\n\n  _createClass(BitFilament, [{\n    key: \"inspect\",\n    value: function inspect(arg) {\n      if (arg === null || typeof arg === 'undefined') return null;\n      if (typeof arg === 'string') return STRING;\n      if (typeof arg === 'number' || typeof arg === 'boolean') return NUMBER;\n      if (arg instanceof Uint8Array || typeof Buffer !== 'undefined' && arg instanceof Buffer) return BUFFER;\n      if (arg instanceof RegExp) return REGEXP;\n      if (arg instanceof Array || arg instanceof Uint16Array || arg instanceof Uint32Array || arg instanceof Int8Array || arg instanceof Int16Array || arg instanceof Int32Array || arg instanceof Float32Array || arg instanceof Float64Array) return ARRAY;\n      return OBJECT;\n    }\n  }, {\n    key: \"twist\",\n    value: function twist(arg) {\n      return this.types[this.inspect(arg)].twist(arg);\n    }\n  }, {\n    key: \"untwist\",\n    value: function untwist(buffer) {\n      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      if (buffer instanceof ArrayBuffer) buffer = new Uint8Array(buffer);else if (!(buffer instanceof Uint8Array)) buffer = Uint8Array.from(buffer);\n      var infoByte = buffer[offset];\n      var type = infoByte & GET_TYPE;\n      var info = infoByte & GET_INFO; // console.log({type, info, buffer})\n\n      return this.types[type].untwist(info, buffer, offset + 1);\n    }\n  }]);\n\n  return BitFilament;\n}();\n\nmodule.exports = BitFilament;","import React, { Component } from 'react'\nimport createECDH from 'create-ecdh'\nimport B64 from 'base64-arraybuffer'\n// import QR from 'qrcode.react'\n\n/* eslint-disable */\n\nimport BitChaos from './lib/bit-chaos'\nimport BitFilament from './lib/bit-filament'\n\nimport logo from './logo-te-logo.png'\nimport './App.css';\n\n\nconst isClient = typeof window !== 'undefined'\n\nconst PATH = typeof location !== 'undefined' ? location.pathname.slice(1) : ''\n\nconst LS = isClient ? (id, value = null) => {\n  console.log('LS', {id, value})\n  if(!value) {\n    if(typeof localStorage[id] === 'undefined') return null\n    try {\n      return JSON.parse(localStorage[id])\n    } catch (err) {\n      console.error(`Can not parse localStorage[${id}] as JSON:\\n${localStorage[id]},\\nerror:\\n`, err)\n    }\n  } else try {\n    value = JSON.stringify(value)\n    localStorage.setItem(id, value)\n    return value\n  } catch (err) {\n    console.error('Can not convert to JSON value', value, '\\nerror:\\n', err)\n  }\n  return null\n} : () => {}\n\nclass App extends Component {\n\n  constructor({ path }) {\n\n    super()\n\n    path = path || PATH\n\n    this.ecdh = createECDH('secp521r1')\n\n    this.bc = new BitChaos('')\n\n    this.state = {\n      key: '',\n      secret: '',\n      peerMessage: '',\n      message: ''\n    }\n\n  }\n\n  componentDidMount () {\n\n    if(isClient){\n\n      this.setupKeys()\n\n    }\n\n  }\n\n  getState () {\n    return this.state\n  }\n\n  setupKeys (privateKey = null) {\n    if(privateKey) {\n      this.ecdh.setPrivateKey(privateKey)\n      this.setState({key: this.ecdh.getPublicKey()})\n      this.privateKey = privateKey\n    } else {\n      if(LS) privateKey = LS('privateKey');\n      if(privateKey) return this.setupKeys(privateKey);\n      this.setState({key: this.ecdh.generateKeys()})\n      this.privateKey = this.ecdh.getPrivateKey()\n    }\n    if(LS) LS('privateKey', this.privateKey)\n  }\n\n  onPeerPublicChange({value = null}) {\n    if(!value) return;\n    try {\n      let secret = this.ecdh.computeSecret(new Uint8Array(B64.decode(value.trim())))\n      this.setState({ secret })\n      this.bc = new BitChaos(secret)\n    } catch (e) { console.warn('wrong peer public:', value, B64.decode(value), e) }\n  }\n\n  onPeerMessageChange({value = null}) {\n    if(!value) return;\n    try {\n      this.setState({\n        peerMessage: this.bc.decrypt(new Uint8Array(B64.decode(value.trim())))\n      })\n    } catch (e) { console.warn('wrong peer message:', value, e) }\n  }\n\n  onMessageChange({value = null}) {\n    if(!value) return;\n    try {\n      this.setState({\n        message: B64.encode(this.bc.encrypt(value))\n      })\n    } catch (e) { console.warn('wrong message:', value, e) }\n  }\n\n  copy({value = null}) {\n    if(!value) return;\n    console.log({navigator})\n\n  }\n\n  render() {\n\n\n    const { key, secret, peerMessage, message } = this.state\n\n    const publicKey = B64.encode(key)\n    console.log({key, secret, publicKey})\n\n    return (\n      <div className=\"App\">\n\n        <header className=\"App-header\">\n          <span>MEM Project</span>\n          <span><img src={logo} className=\"App-logo\" alt=\"logo\" /></span>\n          <span>relative-chaos</span>\n        </header>\n        <h4>end-to-end content encryptyon lab</ h4>\n\n        <div className=\"App-ui\">\n\n          <div className=\"h-box\">\n            <span><textarea className='key-field' placeholder=\"Paste partner public key here\" onChange={({target = null}) => target && this.onPeerPublicChange(target)}/></span>\n            <span><textarea className='key-field' title=\"Copy to clipboard\" onClick={({target = null}) => target && this.copy(target)} value={publicKey}></textarea></span>\n          </div>\n\n          <div className=\"h-box\">\n            <span><textarea placeholder=\"Paste partner encripted text here\" onChange={({target = null}) => target && this.onPeerMessageChange(target)}/></span>\n            <span><textarea placeholder=\"Write or paste you message in clear text here\" onChange={({target = null}) => target && this.onMessageChange(target)}/></span>\n          </div>\n\n          <div className=\"h-box\">\n            <span><textarea onClick={({target = null}) => target && this.copy(target)} onChange={e=>e} title=\"Copy to clipboard\" placeholder=\"Decrypted text from partner appears here\" value={peerMessage}/></span>\n            <span><textarea onClick={({target = null}) => target && this.copy(target)} onChange={e=>e} title=\"Copy to clipboard\" placeholder=\"Your encrypted message\" value={message}/></span>\n          </div>\n\n        </div>\n\n        <h5>2018 © MEM COST Technologies</h5>\n        <div className=\"footer\">\n          <div className=\"top-2\"><h3>{`Want to be owner of You id\\`s?`}</h3></div>\n          <div className=\"top-2\">{`Contribute ( Self Security Hand Book comming soon. Please `}<a className=\"mail-link\" href=\"https://github.com/relative-chaos\">{`follow on gihub`}</a>{` )`}</div>\n        </div>\n      </div>\n    );\n          // <div className=\"top-2\">{`Or `}<a className=\"mail-link\" href=\"https://money.yandex.ru/to/41001821124082\">{`Donate`}</a>{`, if you understand, what we do:`}</div>\n          // <div className=\"flex top-2\">\n          //   <div className=\"key\">\n          //     <p>ETH</p>\n          //     <p className=\"wallet\">0xd0b9e1735ea2c1e2afec712089afc8fcad8906e0</p>\n          //   </div>\n          //   <div className=\"key left-2\">\n          //     <p>BTC</p>\n          //     <p className=\"wallet\">16ghju2oHehczLCcCjRszbYqMrpXpp1pnS</p>\n          //   </div>\n          //   <div className=\"key\">\n          //     <p>DOGE</p>\n          //     <p className=\"wallet\">DCiTowGc2dLLRwY1sEhEBzZ4ZniJL1Hvbn</p>\n          //   </div>\n          //   <div className=\"key left-2\">\n          //     <p>LTC</p>\n          //     <p className=\"wallet\">LNLcMkQD8jogMtfvjCFaMucyXoECUDn8pL</p>\n          //   </div>\n          // </div>\n          // <div className=\"flex top-2\">\n          //   <div className=\"key\">\n          //     <p>XMR</p>\n          //     <p className=\"wallet\">4BrL51JCc9NGQ71kWhnYoDRffsDZy7m1HUU7MRU4nUMXAHNFBEJhkTZV9HdaL4gfuNBxLPc3BeMkLGaPbF5vWtANQoshL4x66PkQf8usv5</p>\n          //   </div>\n          //   <div className=\"key left-2\">\n          //     <p>ZEC</p>\n          //     <p className=\"wallet\">t1LJnH6QFP59PL1UokvZ3YtyoJs6B9yQEiR</p>\n          //   </div>\n          //   <div className=\"key\">\n          //     <p>BCH</p>\n          //     <p className=\"wallet\">qzu0j3n5x48d338ngfgvv2h6frltjaxvcsw6347sr7</p>\n          //   </div>\n          //   <div className=\"key left-2\">\n          //     <p>WAVES</p>\n          //     <p className=\"wallet\">3PHcweuuz8mBZUKC6mNX4VNGhkPNX8a7jux</p>\n          //   </div>\n          // </div>\n  }\n}\n\n/*\n\n\nconst bgFrame = typeof location === 'undefined' ? false : /^\\/https?:\\/\\//.test(location.pathname)\n\n        <div {...{ className: css.appView }}>\n          { bgFrame && <iframe {...{\n            src: `http://evm.mem.chat:${0xBA5E}${typeof location === undefined ? '/' : location.pathname}`,\n            sandbox: \"allow-forms allow-modals allow-pointer-lock allow-popups allow-same-origin allow-scripts\",\n            allow: \"geolocation; microphone; camera; midi; vr\",\n            allowtransparency: \"true\",\n            allowpaymentrequest: \"true\",\n            allowFullScreen: \"true\",\n            className: css.resultIframe\n          }} /> }\n        </div>\n\n */\n\n\n\n        // <div className=\"top-2\"><span>{`Ask: `}</span><a className=\"mail-link\" href=\"mailto:support@mem.chat\">{`support@mem.chat`}</a><span className=\"comment\">{`// please encrypt your question for support using this key:`}</span></div>\n        // <div className=\"comment left-4 width-60 top-1\">{`BAC1cV8+02UTO0H2I3tiQif9JtcQ5SeZC9hcih8qPe60XTE6SngGA5wsKrrgszJeRAo9nQ1PhFxAGxHCC4WpedZKOQBvjGFQteLZfglpVPYDiZKr1mXwjy2xh4PRdfxwVdrFkmW2olkApopXCliFP67KEO5HdZKp56OYV53PTrj6nOx9wQ==`}</div>\n        // <textarea className='copy-area' ref={ref => this.copyArea = ref} onChange={e => e} value=''/>\n\n\n// https://money.yandex.ru/to/410018135995820\n\nexport default App;\n\n\n/*\n\nрассмотрим две логические операции: ИЛИ ( | ) и И ( & ) для классических битовых переменных ( двух однобитовых регистра процессора ) X и Y с записью результата в регистр R\nоперация ИЛИ ( X | Y = \"R\" )\n0 | 0 = 0\n0 | 1 = 1\n1 | 0 = 1\n1 | 1 = 1\nоперация И ( X & Y = \"R\" )\n0 & 0 = 0\n0 & 1 = 0\n1 & 0 = 0\n1 & 1 = 1\nРегистр R может быть представлен как результат операции над регистрами X и Y и так как мы можем совершать над регистрами разные операции, мы можем добавить в систему регистр OP, кодирующий саму операцию\nВиртуализация регистра R позволяет кодировать его значения набором значения трёх регистров, что делает значение этого регистра абстрактным и зависимым от интерпретации значений регистров X, OP, Y\nТак, мы можем установить, что регистр Y кодирует не второй операнд операции, а её результат. По сути мы просто меняем ролями регистры Y и R и теперь виртуализован у нас второй операнд, а результат задан условием\nпри таком способе задания значения виртуального регистра, он может принимать следующие состояния\n\nоперация ИЛИ ( X | \"Y\" = R )\nоднозначно 0\n0 | \"0\" = 0 => 010 = 0\nоднозначно 1\n0 | \"1\" = 1 => 011 = 1\nсуперпозиция состояний (и то и другое одновременно)\n1 | \"0\" = 1 => 111 = ?\n1 | \"1\" = 1 => 111 = ?\nневозможное состояние (ни то ни другое)\n1 | \"!\" = 0 => 110 = !\n\nоперация И ( X & \"Y\" = R )\nсуперпозиция состояний (и то и другое одновременно)\n0 & \"0\" = 0 => 000 = ?\n0 & \"1\" = 0 => 000 = ?\nневозможное состояние (ни то ни другое)\n0 & \"!\" = 1 => 001 = !\nоднозначно 0\n1 & \"0\" = 0 => 100 = 0\nоднозначно 1\n1 & \"1\" = 1 => 101 = 1\n\nТак можно закодировать тремя битами виртуальный кубит. Но можем пойти дальше и закодировать тремя кубитами, да потратив в сумме 9 бит на кодирование одного кубита, но полагаю оно того стоит ) При таком подходе, мы можем любую из составляющих опорного триплета содержать в состоянии суперпозиции, например бит операции и имитировать дальнее взаимодействие например путём синхронизации событий по таймеру для двух кубитов независимо от расстояния между ними. Это вроде и не является квантовой запутанностью в физическом смысле, но работает так же, что позволяет предположить, что явление квантовой запутанности возможно между виртуальными состояниями суперпозиции\n\nBнтересно, достаточно ли будет такого приближения, что бы запустить алгоритм Шора без навороченного квантового кампа ) ?\n\nкстати кейс как заюзать невозможное состояние (в матемактике аналог - это корень из -1 ): кубит операции с невозможным значением может кодировать операцию XOR - исключающее ИЛИ ( X ^ \"Y\" = R )\n\nоднозначно 0\n0 ^ \"0\" = 0\nоднозначно 1\n0 ^ \"1\" = 1\nоднозначно 1\n1 ^ \"0\" = 1\nоднозначно 0\n1 ^ \"1\" = 0\n\nв этом случае нет ни суперпозиции ни невозможного состояния и проц переходит в классический режим обычной бинарной логики\n\n\n\n\n-----------------------------------------\n\nMEM T-Comunity\n        мастера своего дела\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}