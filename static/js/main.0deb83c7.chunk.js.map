{"version":3,"sources":["../lib/bit-chaos.js","logo-te-logo.png","App.js","serviceWorker.js","index.js"],"names":["Buffer","_classCallCheck","__webpack_require__","TextAPI","window","encode","text","TextEncoder","decode","data","TextDecoder","Uint8Array","from","toString","module","exports","BitChaos","secret","origin","chunk","length","result","logic","add","key","ring","len","sub","xor","done","this","ArrayBuffer","filter","byte","encrypt","message","mode","arguments","undefined","fns","slen","dlen","encrypted","sptr","dptr","seq","shift","state","step","slice","reduce","value","part","l","unshift","concat","decrypt","decrypted","steps","fn","_ref","p","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","ecdh","createECDH","bc","generateKeys","peerMessage","_ref$value","computeSecret","b64","setState","e","console","warn","_ref2$value","_ref2","_ref3$value","_ref3","_ref4$value","_ref4","log","navigator","_this2","_this$state","publicKey","react_default","a","createElement","className","src","logo","alt","placeholder","onChange","_ref5","_ref5$target","target","onPeerPublicChange","title","defaultValue","_ref6","_ref6$target","onPeerMessageChange","_ref7","_ref7$target","onMessageChange","disabled","onClick","_ref8","_ref8$target","copy","_ref9","_ref9$target","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0deb83c7.chunk.js","sourcesContent":["var _classCallCheck = require(\"/home/elser/node/projects/relative-chaos/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar isClient = typeof window !== 'undefined';\nvar TextAPI = isClient ? {\n  encode: function encode(text) {\n    return new TextEncoder().encode(text);\n  },\n  decode: function decode(data) {\n    return new TextDecoder().decode(Uint8Array.from(data));\n  }\n} : {\n  encode: function encode(text) {\n    return Buffer.from(text);\n  },\n  decode: function decode(data) {\n    return Buffer.from(data).toString('utf8');\n  }\n};\n\nmodule.exports = function BitChaos(secret) {\n  \"use strict\";\n\n  _classCallCheck(this, BitChaos);\n\n  if (typeof secret === 'string') secret = TextAPI.encode(secret);else if (secret instanceof ArrayBuffer) secret = new Uint8Array(secret);else if (!(secret instanceof Uint8Array)) secret = Uint8Array.from(secret);\n  secret = Uint8Array.from(secret).filter(function (byte) {\n    return !!byte;\n  });\n\n  function origin(chunk, length) {\n    var result = chunk;\n    length = length & 3;\n    var logic = {\n      add: function add(key) {\n        var ring = 255,\n            len = length;\n\n        while (--len) {\n          ring = ring << 8 | ring;\n        }\n\n        ;\n        result = result + key & ring;\n        return logic;\n      },\n      sub: function sub(key) {\n        var ring = 255,\n            len = length;\n\n        while (--len) {\n          ring = ring << 8 | ring;\n        }\n\n        ;\n        result = result >= key ? result - key : ring + 1 + result - key;\n        return logic;\n      },\n      xor: function xor(key) {\n        result = result ^ key;\n        return logic;\n      },\n      done: function done() {\n        return result;\n      }\n    };\n    return logic;\n  }\n\n  this.encrypt = function (message) {\n    var mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'array';\n    var fns = ['add', 'sub', 'xor'];\n    if (typeof message === 'string') message = TextAPI.encode(message);else if (message instanceof ArrayBuffer) message = new Uint8Array(message);else if (!(message instanceof Uint8Array)) message = Uint8Array.from(message);\n    var data = Uint8Array.from(message);\n    var slen = secret.length;\n    var dlen = data.length;\n    var encrypted = [];\n    var mask = 192;\n    var sptr = 0;\n    var dptr = 0;\n\n    while (dptr < dlen) {\n      var len = 0;\n      var seq = secret[sptr++];\n      sptr = sptr >= slen ? sptr - slen : sptr;\n      var shift = 0;\n      var state = void 0,\n          chunk = void 0;\n\n      while (mask >> shift) {\n        var step = (seq & mask >> shift) >> 6 - shift;\n\n        if (step) {\n          if (!len) {\n            len = dlen - dptr < step ? dlen - dptr : step;\n            chunk = data.slice(dptr, dptr + len).reduce(function (value, byte) {\n              return value ? value << 8 | byte : byte;\n            }, 0);\n            state = origin(chunk, len);\n          }\n\n          var key = secret.slice(sptr, sptr + len).reduce(function (key, byte) {\n            return key ? key << 8 | byte : byte;\n          }, 0);\n          state = state[fns[step - 1]](key);\n          sptr += len;\n          sptr = sptr >= slen ? sptr - slen : sptr;\n        }\n\n        shift += 2;\n      } // console.log({state, chunk,dptr, dlen, sptr, slen, encrypted, message, data, secret, len, shift, seq})\n\n\n      var result = state.done();\n      var part = [];\n      var l = len;\n\n      while (l--) {\n        part.unshift(result & 255);\n        result >>= 8;\n      }\n\n      encrypted = encrypted.concat(part);\n      dptr += len;\n    }\n\n    if (mode === 'array') return encrypted;\n    if (mode === 'bytearray') return Uint8Array.from(encrypted);\n    return TextAPI.decode(encrypted);\n  };\n\n  this.decrypt = function (message) {\n    var mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'text';\n    var fns = ['sub', 'add', 'xor'];\n    if (typeof message === 'string') message = TextAPI.encode(message);\n    if (message instanceof ArrayBuffer) message = new Uint8Array(message);else if (!(message instanceof Uint8Array)) message = Uint8Array.from(message);\n    var data = Uint8Array.from(message);\n    var slen = secret.length;\n    var dlen = data.length;\n    var decrypted = [];\n    var sptr = 0;\n    var dptr = 0;\n\n    while (dptr < dlen) {\n      var len = 0;\n      var seq = secret[sptr++];\n      sptr = sptr >= slen ? sptr - slen : sptr;\n      var state = void 0,\n          chunk = void 0;\n      var shift = 0;\n      var mask = 192;\n      var steps = [];\n\n      while (mask >> shift) {\n        var step = (seq & mask >> shift) >> 6 - shift;\n\n        if (step) {\n          if (!len) {\n            len = dlen - dptr < step ? dlen - dptr : step;\n            chunk = data.slice(dptr, dptr + len).reduce(function (value, byte) {\n              return value ? value << 8 | byte : byte;\n            }, 0);\n            state = origin(chunk, len);\n          }\n\n          var key = secret.slice(sptr, sptr + len).reduce(function (key, byte) {\n            return key ? key << 8 | byte : byte;\n          }, 0);\n          steps.unshift({\n            fn: fns[step - 1],\n            key: key\n          });\n          sptr += len;\n          sptr = sptr >= slen ? sptr - slen : sptr;\n        }\n\n        shift += 2;\n      }\n\n      var result = steps.reduce(function (state, _ref) {\n        var fn = _ref.fn,\n            key = _ref.key;\n        return state[fn](key);\n      }, state).done();\n      var part = [];\n      var l = len;\n\n      while (l--) {\n        part.unshift(result & 255);\n        result >>= 8;\n      }\n\n      decrypted = decrypted.concat(part);\n      dptr += len;\n    }\n\n    if (mode === 'array') return decrypted;\n    if (mode === 'bytearray') return Uint8Array.from(decrypted);\n    return TextAPI.decode(decrypted);\n  };\n};","module.exports = __webpack_public_path__ + \"static/media/logo-te-logo.aaa32282.png\";","import React, { Component } from 'react'\nimport createECDH from 'create-ecdh'\nimport BitChaos from './lib/bit-chaos'\nimport b64 from 'base64-arraybuffer'\n\nimport logo from './logo-te-logo.png'\nimport './App.css';\n\n/* eslint-disable */\n\n// АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЬЫЪЭЮЯ\n\nclass App extends Component {\n\n  constructor() {\n    super()\n\n    this.ecdh = createECDH('secp521r1')\n\n    this.bc = new BitChaos('')\n\n    this.state = {\n      key: this.ecdh.generateKeys(),\n      secret: '',\n      peerMessage: '',\n      message: ''\n    }\n\n  }\n\n  onPeerPublicChange({value = null}) {\n    if(!value) return;\n    try {\n      let secret = this.ecdh.computeSecret(new Uint8Array(b64.decode(value)))\n      this.setState({ secret })\n      this.bc = new BitChaos(secret)\n    } catch (e) { console.warn('wrong peer public:', value, b64.decode(value), e) }\n  }\n\n  onPeerMessageChange({value = null}) {\n    if(!value) return;\n    try {\n      this.setState({\n        peerMessage: this.bc.decrypt(new Uint8Array(b64.decode(value)))\n      })\n    } catch (e) { console.warn('wrong peer message:', value, e) }\n  }\n\n  onMessageChange({value = null}) {\n    if(!value) return;\n    try {\n      this.setState({\n        message: b64.encode(this.bc.encrypt(value))\n      })\n    } catch (e) { console.warn('wrong message:', value, e) }\n  }\n\n  copy({value = null}) {\n    if(!value) return;\n    console.log({navigator})\n    // navigator.clipboard.writeText(value).then(console.log, console.error);\n\n\n\n    // console.log({value})\n    // this.copyArea.value = value\n    // console.log('this.copyArea.value', this.copyArea.value)\n    // this.copyArea.focus()\n    // this.copyArea.select()\n    // document.execCommand('copy');\n  }\n\n  render() {\n\n    console.log('key:', this.state.key)\n\n    const { key, secret, peerMessage, message } = this.state\n\n    const publicKey = b64.encode(key)\n\n    return (\n      <div className=\"App\">\n\n        <header className=\"App-header\">\n          <span>MEM Project</span>\n          <span><img src={logo} className=\"App-logo\" alt=\"logo\" /></span>\n          <span>relative-chaos</span>\n        </header>\n        <h4>end-to-end content encryptyon lab</ h4>\n\n        <div className=\"App-ui\">\n\n          <div className=\"h-box\">\n            <span><textarea className='key-field' placeholder=\"Открытый ключ собеседника\" onChange={({target = null}) => target && this.onPeerPublicChange(target)}/></span>\n            <span><textarea className='key-field' title=\"Скопировать в буфер\" onChange={e=>e} defaultValue={publicKey}/></span>\n          </div>\n\n          <div className=\"h-box\">\n            <span><textarea placeholder=\"Шифрованный текст собеседника\" onChange={({target = null}) => target && this.onPeerMessageChange(target)}/></span>\n            <span><textarea placeholder=\"Ваше сообщение собеседнику\" onChange={({target = null}) => target && this.onMessageChange(target)}/></span>\n          </div>\n\n          <div className=\"h-box\">\n            <span><textarea disabled onClick={({target = null}) => target && this.copy(target)} title=\"Скопировать в буфер\" placeholder=\"Расшифрованный текст собеседника\" value={peerMessage}/></span>\n            <span><textarea disabled onClick={({target = null}) => target && this.copy(target)} title=\"Скопировать в буфер\" placeholder=\"Шифрованное сообщение собеседнику\" value={message}/></span>\n          </div>\n\n        </div>\n\n        <h5>2018 © MEM COST Technologies</h5>\n      </div>\n    );\n  }\n}\n        // <textarea className='copy-area' ref={ref => this.copyArea = ref} onChange={e => e} value=''/>\n\nexport default App;\n\n\n/*\n\nрассмотрим две логические операции: ИЛИ ( | ) и И ( & ) для классических битовых переменных ( двух однобитовых регистра процессора ) X и Y с записью результата в регистр R\nоперация ИЛИ ( X | Y = \"R\" )\n0 | 0 = 0\n0 | 1 = 1\n1 | 0 = 1\n1 | 1 = 1\nоперация И ( X & Y = \"R\" )\n0 & 0 = 0\n0 & 1 = 0\n1 & 0 = 0\n1 & 1 = 1\nРегистр R может быть представлен как результат операции над регистрами X и Y и так как мы можем совершать над регистрами разные операции, мы можем добавить в систему регистр OP, кодирующий саму операцию\nВиртуализация регистра R позволяет кодировать его значения набором значения трёх регистров, что делает значение этого регистра абстрактным и зависимым от интерпретации значений регистров X, OP, Y\nТак, мы можем установить, что регистр Y кодирует не второй операнд операции, а её результат. По сути мы просто меняем ролями регистры Y и R и теперь виртуализован у нас второй операнд, а результат задан условием\nпри таком способе задания значения виртуального регистра, он может принимать следующие состояния\n\nоперация ИЛИ ( X | \"Y\" = R )\nоднозначно 0\n0 | \"0\" = 0 => 000 = 0\nоднозначно 1\n0 | \"1\" = 1 => 001 = 1\nсуперпозиция состояний (и то и другое одновременно)\n1 | \"0\" = 1 => 101 = ?\n1 | \"1\" = 1 => 101 = ?\nневозможное состояние (ни то ни другое)\n1 | \"!\" = 0 => 100 = !\n\nоперация И ( X & \"Y\" = R )\nсуперпозиция состояний (и то и другое одновременно)\n0 & \"0\" = 0 => 010 = ?\n0 & \"1\" = 0 => 010 = ?\nневозможное состояние (ни то ни другое)\n0 & \"!\" = 1 => 011 = !\nоднозначно 0\n1 & \"0\" = 0 => 110 = 0\nоднозначно 1\n1 & \"1\" = 1 => 111 = 1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}